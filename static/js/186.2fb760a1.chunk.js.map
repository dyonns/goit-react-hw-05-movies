{"version":3,"file":"static/js/186.2fb760a1.chunk.js","mappings":"yNAoCA,UAhCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,qGACAC,EAAAA,EAAAA,IAAgBP,GADhB,OACbQ,EADa,OAEnBJ,EAAWI,EAAKC,SAFG,2CAAH,qDAIlBH,GACD,GAAE,CAACN,KAGF,8BACGG,EAAQO,QAAU,GACjB,sEAEA,wBACGP,EAAQQ,KAAI,SAAAC,GAAM,OACjB,yBACE,2BACE,wBAAKA,EAAOC,UACZ,wBAAKD,EAAOE,cAHPF,EAAOG,GADC,OAY5B,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieReviews } from 'servises/FilmAPI';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      const data = await getMovieReviews(movieId);\n      setReviews(data.results);\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length <= 0 ? (\n        <p>We don't have any reviews for this movie.</p>\n      ) : (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <ul>\n                <li>{review.author}</li>\n                <li>{review.content}</li>\n              </ul>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","getMovieReviews","data","results","length","map","review","author","content","id"],"sourceRoot":""}