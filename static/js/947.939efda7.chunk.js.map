{"version":3,"file":"static/js/947.939efda7.chunk.js","mappings":"iOAgEA,UA5DqB,WAAO,IAAD,IACzB,GAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAGFE,EAAQ,qBAFGC,EAAAA,EAAAA,MAESC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAWzC,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,qGACLC,EAAAA,EAAAA,IAAgBR,GADX,OAClBS,EADkB,OAExBZ,EAAWY,GACXV,EAAUU,EAAKX,QAHS,2CAAH,qDAKvBS,GACD,GAAE,CAACP,KAGF,4BACE,SAAC,KAAD,CAAMU,GAAIR,EAAV,sBAEA,4BACE,gBACES,IAAG,yCAAoCf,EAAQgB,aAC/CC,IAAI,kBAEN,4BACE,wBAAKjB,EAAQkB,SACb,kCAAUlB,EAAQmB,iBAClB,sCACA,uBAAInB,EAAQoB,YACZ,oCACA,wBACGlB,EAAOmB,KAAI,SAAAC,GAAI,OACd,wBAAmBA,EAAKC,MAAfD,EAAKE,GADA,aAMtB,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMV,GAAE,kBAAaV,EAAb,SAA6BI,MAAO,CAAEC,KAAMH,GAApD,qBAIF,yBACE,SAAC,KAAD,CAAMQ,GAAE,kBAAaV,EAAb,YAAgCI,MAAO,CAAEC,KAAMH,GAAvD,8BAMN,SAAC,KAAD,MAGL,C","sources":["components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { getMovieDetails } from '../../servises/FilmAPI';\nimport { useEffect, useState } from 'react';\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState('');\n  const [genres, setGenres] = useState([]);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const cameBack = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      const data = await getMovieDetails(movieId);\n      setDetails(data);\n      setGenres(data.genres);\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={cameBack}>Go Back</Link>\n\n      <div>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${details.poster_path}`}\n          alt=\"Movie Poster\"\n        />\n        <div>\n          <h1>{details.title}</h1>\n          <p>Rating{details.vote_average}</p>\n          <h2>Overview</h2>\n          <p>{details.overview}</p>\n          <h2>Genres</h2>\n          <ul>\n            {genres.map(genr => (\n              <li key={genr.id}>{genr.name}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <div>\n        <h3>Edditional Information</h3>\n        <ul>\n          <li>\n            <Link to={`/movies/${movieId}/cast`} state={{ from: cameBack }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to={`/movies/${movieId}/reviews`} state={{ from: cameBack }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["useState","details","setDetails","genres","setGenres","movieId","useParams","cameBack","useLocation","state","from","useEffect","fetchMovieDetails","getMovieDetails","data","to","src","poster_path","alt","title","vote_average","overview","map","genr","name","id"],"sourceRoot":""}